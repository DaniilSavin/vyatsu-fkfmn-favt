// RabinKarp.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <clocale>
using namespace std;


#define d 256 // количество символов во входном алфавите

void search(char pat[], char txt[], int q)
{
	setlocale(0, "");
	int M = strlen(pat);
	int N = strlen(txt);
	int i, j;
	int p = 0; // хеш-значение для шаблона
	int t = 0; // хеш-значение для txt
	int h = 1;
	// Значение h будет "pow (d, M-1)% q".
	for (i = 0; i < M - 1; i++)
		h = (h * d) % q;

	// Вычислить хеш-значение шаблона и первого окна текста
	for (i = 0; i < M; i++)
	{
		p = (d * p + pat[i]) % q;
		t = (d * t + txt[i]) % q;
	}

	// Поочередно перемещаем подстроку по тексту
	for (i = 0; i <= N - M; i++)
	{
		// проверка хеш-значений текущего окна текста и подстроки. Если значения хеш-функции совпадают, то только
		// проверить символы по одному
		if (p == t)
		{
			/* провека символы по одному*/
			for (j = 0; j < M; j++)
			{
				if (txt[i + j] != pat[j])
					break;
			}
			// if p == t and pat[0...M-1] = txt[i, i+1, ...i+M-1] 
			if (j == M)
				cout << "Вхождение найдено с индексом: " << i << endl;
		}
		// Вычисление значение хеш-функции для следующего окна текста: удалить начальную цифру, добавить конечную цифру
		if (i < N - M)
		{
			t = (d * (t - txt[i] * h) + txt[i + M]) % q;

			// получение отрицательного значение t, преобразовав его в положительное. 
			if (t < 0)
				t = (t + q);
		}
	}
}

int main()
{
	char txt[] = "ABCD ABC ABCD";
	char pat[] = "ABCD";
	int q = 110; //хэш значение
	search(pat, txt, q);
	return 0;
}

