(defun func()
 (setq koef(list
     "Количество ног 2 "
     "Количество ног 3 "
     "Количество ног 4-7 "
     "Количество ног >7 "
     "Цена <1р "
     "Цена 1-10р "
     "Цена >10р "
     "Размер элемента большой? "
     "Элемент покупают часто? "
     "Элемент сгорает (не взрывается)? "
     "Конструкция современная? "
    )
  )
  (princ "Введите коэффициенты уверенности \n\n")
  (princ (nth 0 koef))
  (setq e1(read))
  (princ (nth 1 koef))
  (setq e2(read))
  (princ (nth 2 koef))
  (setq e3(read))
  (princ (nth 3 koef))
  (setq e4(read))
  (princ (nth 4 koef))
  (setq e5(read))
  (princ (nth 5 koef))
  (setq e6(read))
  (princ (nth 6 koef))
  (setq e7(read))
  (princ (nth 7 koef))
  (setq e8(read))
  (princ (nth 8 koef))
  (setq e9(read))
  (princ (nth 9 koef))
  (setq e10(read))
  (princ (nth 10 koef))
  (setq e11(read))
  (setq sort(list e1 e2 e3 e4 e5 e6 e7 e8 e9 e10 e11))
  (setq mx1 -100)
  (setq n 1)
 ; (dotimes (a 11)
    (dolist (w sort)
       (setq w1 (- w 1))
       (setq c (nth w1 sort))
;       (princ "N=")
;       (princ n)
;       (princ " ")
       (if (> c mx1) 
         (setq n w) 
         (setq mx1 c) 
       )
;       (print n)
;       (princ "Max=")
;       (princ Mx1)
;       (princ " ")
;       (if (> c mx1)
;       )
;       (print Mx1)


       (princ "Элемент ")
       (princ mx1)
       (princ " ")
       (princ w)
       (princ " ")
       (print n)
    )
 ; )
 
  (setq e12( * 0.9 (min e1 e5)))

  (setq e13( * 0.2 e2))
  (if (and (>= e13 0) (>= e2 0)) 
     (setq trava (* 0.7 (- (+ e13 e2) (* e13 e2))))
  )
  (if (and (< trava1 0) (< luk 0)) 
     (setq trava (+ trava1 luk (* trava1 luk)))
  )
  (if (or (and (< trava1 0) (>= luk 0)) (and (>= trava1 0) (< luk 0)))
     (setq trava (/ (+ trava1 luk) (- 1 (min (abs trava1) (abs luk)))))
  )


;  (setq kust( min (max white magente red yellow pink) vetv))
;  (setq trava1(max white red yellow pink))
;  (if (and (>= trava1 0) (>= luk 0)) 
;     (setq trava (- (+ trava1 luk) (* trava1 luk)))
;  )
;  (if (and (< trava1 0) (< luk 0)) 
;     (setq trava (+ trava1 luk (* trava1 luk)))
;  )
;  (if (or (and (< trava1 0) (>= luk 0)) (and (>= trava1 0) (< luk 0)))
;     (setq trava (/ (+ trava1 luk) (- 1 (min (abs trava1) (abs luk)))))
;  )
;  (setq tree(min ster (max white magente)))
;  (setq rose(min kust (max home garden)))
;  (setq tulpan(min trava (min wild garden)))
;  (setq narciss(min trava garden (min white yellow)))
;  (setq pion(min kust garden))
;  (setq siren(min tree (max wild garden)))
  (princ "Это резистор ")
  (print e24)
  (princ "Это транзистор ")
  (print e25)
  (princ "Это микросхема ")
  (print e26)
  (princ "Это радиолампа ")
  (print e27)
  (princ "Это трансформатор ")
  (print e28)
  (princ "Это конденсатор ")
  (print e29)
)
  