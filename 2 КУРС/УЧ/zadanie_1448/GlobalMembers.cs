using System;

public static class GlobalMembers
{
	// zadanie_1448.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
	//
	/*Стратегия:
	*Жадный.Добавьте 0 или 1 к последовательности, чтобы количество добавленных 0 и 1 находилось в пределах 1
	* от идеального соотношения.Тогда любая подпоследовательность(не обязательно начиная с первого числа)
	* будет в пределах 2 от идеального соотношения, как указано.
	* Доказательство : Обозначим требуемое соотношение единиц как r = b / 100 и количество единиц в подпоследовательности
	* между индексами от 0 до i по n_i.Для любой произвольной подпоследовательности, между индексами i и j, скажем,
	*у нас есть | н_и - ри | <= 1 и | n_j - rj | <= 1, из нашей жадной стратегии.По треугольнику
	* неравенство это означает, что | (n_j - n_i) - r(j - i) | = | n_j - rj - (n_i - ri) | <=
	*| n_j - rj | +| н_и - ри | <= 1 + 1, что является требованием к проблеме.
	*
	*Представление:
	*Сложность O(N), и программа запускает набор тестов за 0, 031 с использованием 164 КБ памяти.*/




	static int Main()
	{
		int N;
		int b;
		scanf_s("%d %d", N, b);
		for (int i = 0, n = 0; i < N; i++)
		{
			if (i * b >= 100 * n)
			{
				n++, cout << "1";
			}
			else
			{
				Console.Write("0");
			}
		}
	}
}